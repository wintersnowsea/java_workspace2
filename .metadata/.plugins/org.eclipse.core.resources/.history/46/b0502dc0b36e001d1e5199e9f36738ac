package tablemodel;

import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.SQLException;

import javax.swing.JFrame;
import javax.swing.JScrollPane;
import javax.swing.JTable;

//JTable에서 TableModel 사용이 상당히 큰 비중을 차지하는 데,
//왜 사용해야하는지를 이해하기 위한 예제
//사용했을경우와 사용하지 않았을 경우를 비교
/* JDBC 프로그래밍 절차
1) 드라이버 로드
2) 접속
3) 쿼리문
4) 자원해제 
 * */
public class AppMain extends JFrame {
	JTable table;
	JScrollPane scroll; //스크롤을 이용해야 컬럼 제목이 노출된다
	String[][] data; //emp연동 예정
	String[] column= {"EMPNO","ENAME","JOB","MGR","HIREDATE","SAL","COMM","DEPTNO"};
	String url="jdbc:oracle:thin:@localhost:1521:XE";
	String user="java";
	String pass="1234";
	Connection con; //멤버변수로 선언한 이유? 원할 때 접속을 끊기 위해
	
	public AppMain() {
		//오라클 연동하기!!
		connect(); //오라클 접속
		table=new JTable();
		scroll=new JScrollPane(table);
		add(scroll);
		
		setSize(600,400);
		setVisible(true);
		setDefaultCloseOperation(EXIT_ON_CLOSE);
		
		//윈도우와 리스너 연결
		this.addWindowListener(new WindowAdapter() {
			public void windowClosing(WindowEvent e) {
				
			}
		});
	}
	
	//오라클 접속하기
	public void connect() {
		try {
			//드라이버 로드
			Class.forName("oracle.jdbc.driver.OracleDriver");
			
			//접속
			con=DriverManager.getConnection(url, user, pass);
			if(con==null) {
				this.setTitle("접속실패");
			}else {
				this.setTitle(user+" 계정으로 접속됨");
			}
			
		} catch (ClassNotFoundException e) {
			e.printStackTrace();
		} catch (SQLException e) {
			e.printStackTrace();
		}
	}
	
	//접속을 해제
	public void release(Connection con) {
		
	}
	
	public static void main(String[] args) {
		new AppMain();
	}
}
