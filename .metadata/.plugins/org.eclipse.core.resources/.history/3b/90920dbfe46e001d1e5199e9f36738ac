package boardmodel;

import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;

import javax.swing.table.AbstractTableModel;

//오라클의 Board 테이블에 관한 정보를 가진 모델 객체
public class BoardModel extends AbstractTableModel{
	BoardMain boardMain;
	String[] column= {"board_id","title","writer","content","regdate","hit"};
	String[][] data;
	
	public BoardModel(BoardMain boardMain) {
		this.boardMain=boardMain;
		select();
	}
	public void select() {
		PreparedStatement pstmt=null;
		ResultSet rs=null;
		String sql="select * from board order by board_id desc";
		try {
			//쿼리객체 생성
			pstmt=boardMain.con.prepareStatement(sql,ResultSet.TYPE_SCROLL_INSENSITIVE,ResultSet.CONCUR_READ_ONLY);
			rs=pstmt.executeQuery();
			
			rs.last();
			int total=rs.getRow(); //총 몇건인지 반환
			
			//rs는 곧 죽으므로, rs를 대신하여 데이터를 담게 될 이차원 배열 만들기
			data=new String[total][column.length];
			rs.beforeFirst();
			for(int i=0;i<total;i++) {
				rs.next();
				//String[] column= {"board_id","title","writer","content","regdate","hit"};
				data[i][0]=Integer.toString(rs.getInt("board_id"));
				data[i][1]=rs.getString("title"); //제목
				data[i][2]=rs.getString("writer"); //작성자
				data[i][3]=rs.getString("content"); //내용
				data[i][4]=rs.getString("regdate"); //날짜
				data[i][5]=Integer.toString(rs.getInt("hit")); //조회수				
			}
		} catch (SQLException e) {
			e.printStackTrace();
		}finally {
			boardMain.release(pstmt, rs);
		}
	}
	
	@Override
	public int getRowCount() {
		return 7;
	}

	@Override
	public int getColumnCount() {
		return 3;
	}

	@Override
	public Object getValueAt(int rowIndex, int columnIndex) {
		return "♥";
	}

}
